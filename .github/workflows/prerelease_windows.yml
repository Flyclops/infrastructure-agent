name: Prerelease Windows

on:
  release:
    types:
      - prereleased
    tags:
      - '*'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO_VERSION: '1.16.12'
  PFX_CERTIFICATE_BASE64: ${{ secrets.OHAI_PFX_CERTIFICATE_BASE64 }} # base64 encoded
  PFX_CERTIFICATE_DESCRIPTION: 'New Relic'
  PFX_PASSPHRASE:  ${{ secrets.OHAI_PFX_PASSPHRASE }}
  SNYK_TOKEN: ${{ secrets.CAOS_SNYK_TOKEN }}
  TAG: ${{ github.event.release.tag_name }}
  DOCKER_HUB_ID: ${{ secrets.OHAI_DOCKER_HUB_ID }}
  DOCKER_HUB_PASSWORD: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
  # required for GHA publish action, should be moved into optional
  GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
  GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
  SCHEMA_BRANCH: ${{ github.event.release.tag_name }}
  AWS_S3_BUCKET_NAME: "nr-downloads-ohai-staging"
  AWS_REGION: "us-east-1"

jobs:

  unit-test:
    uses: newrelic/infrastructure-agent/.github/workflows/component_windows_unit_test.yml@ci_actions

  packaging:
    needs: [ unit-test ]
    uses: newrelic/infrastructure-agent/.github/workflows/component_windows_packaging.yml@ci_actions
    secrets:
      PFX_CERTIFICATE_BASE64: ${{ secrets.OHAI_PFX_CERTIFICATE_BASE64 }}
      PFX_PASSPHRASE: ${{ secrets.OHAI_PFX_PASSPHRASE }}
    with:
      PFX_CERTIFICATE_DESCRIPTION: 'New Relic'
      TAG: ${{ github.event.release.tag_name }}
      GOPATH: ${{ github.workspace }}

  publishing-to-s3:
    # point to staging after tests
    name: Publish linux artifacts into s3 testing bucket
    needs: [ packaging ]
    uses: newrelic/infrastructure-agent/.github/workflows/component_windows_publish.yml@ci_actions
    secrets:
      DOCKER_HUB_ID: ${{secrets.OHAI_DOCKER_HUB_ID}}
      DOCKER_HUB_PASSWORD: ${{secrets.OHAI_DOCKER_HUB_PASSWORD}}
      GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
      GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
      AWS_ACCESS_KEY_ID: ${{ secrets.OHAI_AWS_ACCESS_KEY_ID_TESTING }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.OHAI_AWS_SECRET_ACCESS_KEY_TESTING }}
      AWS_ROLE_ARN: ${{ secrets.OHAI_AWS_ROLE_ARN_TESTING }}
      AWS_ROLE_SESSION_NAME: ${{ secrets.OHAI_AWS_ROLE_SESSION_NAME_TESTING }}
    with:
      ACCESS_POINT_HOST: "testing"
      RUN_ID: ${{ github.run_id }}
      TAG: ${{ github.event.release.tag_name }}
      AWS_S3_BUCKET_NAME: "nr-downloads-ohai-testing"
      AWS_S3_LOCK_BUCKET_NAME: "onhost-ci-lock-testing"
      ASSETS_TYPE: "all"
      DISABLE_LOCK: true
